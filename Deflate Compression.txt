import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.zip.Deflater;
import java.util.zip.Inflater;

public class MessageCompression {
    public static byte[] compressMessage(String message) throws IOException {
        byte[] input = message.getBytes();
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream(input.length);
        Deflater deflater = new Deflater();
        deflater.setInput(input);
        deflater.finish();
        byte[] buffer = new byte[1024];
        while (!deflater.finished()) {
            int count = deflater.deflate(buffer);
            outputStream.write(buffer, 0, count);
        }
        outputStream.close();
        return outputStream.toByteArray();
    }

    public static String decompressMessage(byte[] compressedData) throws IOException {
        ByteArrayInputStream inputStream = new ByteArrayInputStream(compressedData);
        Inflater inflater = new Inflater();
        inflater.setInput(compressedData);
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream(compressedData.length);
        byte[] buffer = new byte[1024];
        while (!inflater.finished()) {
            try {
                int count = inflater.inflate(buffer);
                outputStream.write(buffer, 0, count);
            } catch (Exception ex) {
                break;
            }
        }
        outputStream.close();
        return new String(outputStream.toByteArray());
    }

    public static void main(String[] args) throws IOException {
        String originalMessage = "This is a sample message to compress!";
        byte[] compressedMessage = compressMessage(originalMessage);
        System.out.println("Compressed message: " + new String(compressedMessage));
        String decompressedMessage = decompressMessage(compressedMessage);
        System.out.println("Decompressed message: " + decompressedMessage);
    }
}
